- name: Create/Start the api-gateway container
  hosts: all
  gather_facts: false
  collections:
    - containers.podman
  vars:
    event_id: "{{ ansible_eda.event.payload.event_id }}"
    episode_id: "{{ ansible_eda.event.payload.itsi_group_id }}"
    comment_text: "Investigated – root cause fixed b Ansible Automation Platform job : https://18.171.172.51/execution/jobs/playbook/{{ tower_job_id }}/output"
    target_image: "docker.io/springcommunity/spring-petclinic-api-gateway"
    is_group: true
    new_status: 4
    
  vars_files:
    - splunk
    
  tasks:
    - name: Start api-gateway container
      containers.podman.podman_container:
        name: api-gateway
        image: docker.io/springcommunity/spring-petclinic-api-gateway:latest
        state: started
        detach: true
        privileged: true
        network:
          - petclinic-net
        publish:
          - "8180:8080"
          - "9016:9016"
        env:
          SPRING_PROFILES_ACTIVE: docker
          SPRING_JMX_ENABLED: "true"
          MANAGEMENT_METRICS_EXPORT_JMX_ENABLED: "true"
          MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
          JAVA_TOOL_OPTIONS: >
            -Dcom.sun.management.jmxremote
            -Dcom.sun.management.jmxremote.port=9016
            -Dcom.sun.management.jmxremote.rmi.port=9016
            -Dcom.sun.management.jmxremote.authenticate=false
            -Dcom.sun.management.jmxremote.ssl=false
            -Djava.rmi.server.hostname=127.0.0.1

    - name: Event ID
      debug:
        msg: "{{ ansible_eda.event.payload.event_id }}"
        
    - name: Check if episode exists
      uri:
       url: "https://{{ splunk_host }}:{{ splunk_port }}/servicesNS/nobody/SA-ITOA/event_management_interface/notable_event_group/{{ episode_id }}"
       method: GET
       user: "{{ splunk_user }}"
       password: "{{ splunk_pass }}"
       force_basic_auth: yes
       validate_certs: no

    - name: Add comment to Splunk notable event
      uri:
        url: https://{{ splunk_host }}:{{ splunk_port }}/servicesNS/nobody/SA-ITOA/event_management_interface/notable_event_comment
        method: POST
        user: "{{ splunk_user }}"
        password: "{{ splunk_pass }}"
        force_basic_auth: yes
        validate_certs: no
        headers:
          Content-Type: application/json
        body_format: json
        body:
          comment: "Investigated – root cause fixed"
          event_id: "{{ episode_id }}"
          is_group: true
        status_code: 200
      register: comment_response

    - name: Display comment response
      debug:
        var: comment_response.json

    - name: Update Splunk Status
      uri:
        url: "https://{{ splunk_host }}:{{ splunk_port }}/servicesNS/nobody/SA-ITOA/event_management_interface/notable_event_group/{{ episode_id }}?is_partial_data=1"
        method: POST
        user: "{{ splunk_user }}"
        password: "{{ splunk_pass }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          status: "{{ new_status }}"
        validate_certs: no
        status_code: 200
