- name: Update the Episode
  hosts: all
  gather_facts: false
  collections:
    - containers.podman
  vars:
    event_id: "{{ ansible_eda.event.payload.event_id }}"
    episode_id: "{{ ansible_eda.event.payload.itsi_group_id }}"
    target_image: "docker.io/springcommunity/spring-petclinic-api-gateway"
    controller_host: localhost
    is_group: true
    new_status: 4
    controller_token: KeidQrFmVGYe0VBmAYopx8rMOSqMSD
    controller_host: localhost
    
  vars_files:
    - splunk
    
  tasks:

    - name: Episode ID
      debug:
        msg: "{{ ansible_eda.event.payload.episode_id }}"
        
    - name: Check if episode exists
      uri:
       url: "https://{{ splunk_host }}:{{ splunk_port }}/servicesNS/nobody/SA-ITOA/event_management_interface/notable_event_group/{{ episode_id }}"
       method: GET
       user: "{{ splunk_user }}"
       password: "{{ splunk_pass }}"
       force_basic_auth: yes
       validate_certs: no

    - name: "Get job details from AAP"
      ansible.builtin.uri:
        url: "https://{{ controller_host }}/api/v2/jobs/{{ current_job_id }}/"
        method: GET
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ controller_token }}"
        validate_certs: false 
        status_code: 200
      register: job_details_result

    - name: Add comment to Splunk notable event
      uri:
        url: https://{{ splunk_host }}:{{ splunk_port }}/servicesNS/nobody/SA-ITOA/event_management_interface/notable_event_comment
        method: POST
        user: "{{ splunk_user }}"
        password: "{{ splunk_pass }}"
        force_basic_auth: yes
        validate_certs: no
        headers:
          Content-Type: application/json
        body_format: json
        body:
          comment: "{{ job_details_result }}"
          event_id: "{{ episode_id }}"
          is_group: true
        status_code: 200
      register: comment_response

    - name: Display comment response
      debug:
        var: comment_response.json

    - name: Set episode status to Resolved
      ansible.builtin.uri:
        url: "https://{{ splunk_host }}:{{ splunk_port }}/servicesNS/nobody/SA-ITOA/event_management_interface/notable_event_group/{{ episode_id }}"
        method: POST
        user: "{{ splunk_user }}"
        password: "{{ splunk_pass }}"
        force_basic_auth: yes
        body:
          status: 4
        body_format: json
        validate_certs: false
        status_code: 200
